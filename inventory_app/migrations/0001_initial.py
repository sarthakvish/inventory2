# Generated by Django 3.1.5 on 2021-04-30 11:45

from django.conf import settings
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import inventory_app.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(max_length=10, unique=True, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 10 digits allowed.", regex='^\\+?1?\\d{9,10}$')], verbose_name='phone')),
                ('user_type', models.CharField(choices=[(1, 'Admin'), (2, 'Staff'), (3, 'Merchant'), (4, 'Customer')], default=1, max_length=255)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', inventory_app.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Bill',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('added_on', models.DateTimeField(auto_now_add=True)),
                ('customer_id', models.IntegerField()),
                ('contact', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='BillDetails',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('product_name', models.CharField(max_length=255, unique=True)),
                ('product_id', models.IntegerField()),
                ('qty', models.IntegerField()),
                ('added_on', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=255)),
                ('contact', models.CharField(max_length=255, unique=True)),
                ('added_on', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomerRequest',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('customer_name', models.CharField(max_length=255)),
                ('phone', models.CharField(max_length=255)),
                ('product_details', models.CharField(max_length=255)),
                ('status', models.BooleanField(default=False)),
                ('added_on', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('joining_date', models.DateField()),
                ('phone', models.CharField(max_length=255, unique=True)),
                ('address', models.CharField(max_length=255)),
                ('added_on', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comments', models.TextField(blank=True, default='', max_length=3000, null=True)),
                ('invoice_number', models.IntegerField(blank=True, null=True)),
                ('invoice_date', models.DateField(blank=True, null=True)),
                ('name', models.CharField(blank=True, default='', max_length=120, null=True, verbose_name='Customer Name')),
                ('line_one', models.CharField(blank=True, default='', max_length=120, null=True, verbose_name='Line 1')),
                ('line_one_quantity', models.IntegerField(blank=True, default=0, null=True, verbose_name='Quantity')),
                ('line_one_unit_price', models.IntegerField(blank=True, default=0, null=True, verbose_name='Unit Price (D)')),
                ('line_one_total_price', models.IntegerField(blank=True, default=0, null=True, verbose_name='Line Total (D)')),
                ('line_two', models.CharField(blank=True, default='', max_length=120, null=True, verbose_name='Line 2')),
                ('line_two_quantity', models.IntegerField(blank=True, default=0, null=True, verbose_name='Quantity')),
                ('line_two_unit_price', models.IntegerField(blank=True, default=0, null=True, verbose_name='Unit Price (D)')),
                ('line_two_total_price', models.IntegerField(blank=True, default=0, null=True, verbose_name='Line Total (D)')),
                ('line_three', models.CharField(blank=True, default='', max_length=120, null=True, verbose_name='Line 3')),
                ('line_three_quantity', models.IntegerField(blank=True, default=0, null=True, verbose_name='Quantity')),
                ('line_three_unit_price', models.IntegerField(blank=True, default=0, null=True, verbose_name='Unit Price (D)')),
                ('line_three_total_price', models.IntegerField(blank=True, default=0, null=True, verbose_name='Line Total (D)')),
                ('line_four', models.CharField(blank=True, default='', max_length=120, null=True, verbose_name='Line 4')),
                ('line_four_quantity', models.IntegerField(blank=True, default=0, null=True, verbose_name='Quantity')),
                ('line_four_unit_price', models.IntegerField(blank=True, default=0, null=True, verbose_name='Unit Price (D)')),
                ('line_four_total_price', models.IntegerField(blank=True, default=0, null=True, verbose_name='Line Total (D)')),
                ('line_five', models.CharField(blank=True, default='', max_length=120, null=True, verbose_name='Line 5')),
                ('line_five_quantity', models.IntegerField(blank=True, default=0, null=True, verbose_name='Quantity')),
                ('line_five_unit_price', models.IntegerField(blank=True, default=0, null=True, verbose_name='Unit Price (D)')),
                ('line_five_total_price', models.IntegerField(blank=True, default=0, null=True, verbose_name='Line Total (D)')),
                ('phone_number', models.CharField(blank=True, default='', max_length=120, null=True)),
                ('total', models.IntegerField(blank=True, default='0', null=True)),
                ('balance', models.IntegerField(blank=True, default='0', null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('paid', models.BooleanField(default=False)),
                ('invoice_type', models.CharField(blank=True, choices=[('Receipt', 'Receipt'), ('Proforma Invoice', 'Proforma Invoice'), ('Invoice', 'Invoice')], default='', max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('buy_price', models.CharField(max_length=255)),
                ('sell_price', models.CharField(max_length=255)),
                ('c_gst', models.CharField(max_length=255)),
                ('s_gst', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
                ('measurement_unit', models.CharField(choices=[(1, 'Bori'), (2, 'Kg'), (3, 'unit')], max_length=255)),
                ('in_stock_total', models.IntegerField()),
                ('qty_in_strip', models.IntegerField()),
                ('added_on', models.DateTimeField(auto_now_add=True)),
                ('provider_name', models.CharField(max_length=255)),
                ('provider_contact', models.CharField(max_length=255, unique=True)),
                ('Provider_id', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Provider',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('provider_name', models.CharField(max_length=255)),
                ('license_no', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=255)),
                ('provider_contact', models.CharField(max_length=255, unique=True)),
                ('email', models.CharField(max_length=255)),
                ('description', models.CharField(max_length=255)),
                ('added_on', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProviderAccount',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('provider_name', models.CharField(max_length=255, unique=True)),
                ('provider_contact', models.CharField(max_length=255, unique=True)),
                ('provider_id', models.IntegerField(unique=True)),
                ('transaction_type', models.CharField(choices=[(1, 'Debit'), (2, 'Credit')], max_length=255)),
                ('transaction_amt', models.CharField(max_length=255)),
                ('transaction_date', models.DateField()),
                ('payment_mode', models.CharField(max_length=255)),
                ('added_on', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(blank=True, max_length=50, null=True)),
                ('item_name', models.CharField(blank=True, max_length=50, null=True)),
                ('quantity', models.IntegerField(blank=True, default='0', null=True)),
                ('receive_quantity', models.IntegerField(blank=True, default='0', null=True)),
                ('measurement_unit', models.CharField(choices=[('un', 'unit'), ('kg', 'kg'), ('br', 'bori')], default='Choose measurement unit', max_length=255)),
                ('receive_by', models.CharField(blank=True, max_length=50, null=True)),
                ('issue_quantity', models.IntegerField(blank=True, default='0', null=True)),
                ('issue_by', models.CharField(blank=True, max_length=50, null=True)),
                ('issue_to', models.CharField(blank=True, max_length=50, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=50, null=True)),
                ('created_by', models.CharField(blank=True, max_length=50, null=True)),
                ('reorder_level', models.IntegerField(blank=True, default='0', null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('export_to_CSV', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='StockHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(blank=True, max_length=50, null=True)),
                ('item_name', models.CharField(blank=True, max_length=50, null=True)),
                ('quantity', models.IntegerField(blank=True, default='0', null=True)),
                ('receive_quantity', models.IntegerField(blank=True, default='0', null=True)),
                ('receive_by', models.CharField(blank=True, max_length=50, null=True)),
                ('issue_quantity', models.IntegerField(blank=True, default='0', null=True)),
                ('issue_by', models.CharField(blank=True, max_length=50, null=True)),
                ('issue_to', models.CharField(blank=True, max_length=50, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=50, null=True)),
                ('created_by', models.CharField(blank=True, max_length=50, null=True)),
                ('reorder_level', models.IntegerField(blank=True, default='0', null=True)),
                ('last_updated', models.DateTimeField(null=True)),
                ('timestamp', models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='StaffUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_pic', models.FileField(default='', upload_to='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('auth_user_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MerchantUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_pic', models.FileField(default='', upload_to='')),
                ('company_name', models.CharField(max_length=255)),
                ('gst_details', models.CharField(max_length=255)),
                ('address', models.TextField()),
                ('is_added_by_admin', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('auth_user_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CustomerUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_pic', models.FileField(default='', upload_to='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('auth_user_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AdminUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_pic', models.FileField(default='', upload_to='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('auth_user_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
